Choose Your Own Adventure / Dungeon Crawler

Create a choose your own adventure or dungeon crawler game using Firestore to 
store adventure "scenes" or dungeon "rooms." This is more challenging than it 
sounds and it's important to think carefully about how data will be structured.
How can you associate two scenes with each other, or two rooms? Once you've 
figured out a data structure, focus on building a simple text-based implementation. 
If you have the time, you can always work on a GUI after the basics are complete.

*** DATA STRUCTURE ***

// NoSQL databases scale well horizontally, encouraging multiple large, shallow collections

- Player (info stored in database as 'player' collection and updated each round)
  * name
  * hp (state)
  * attack
  * currentRoom (.where(player.currentRoom === room.id)) (state)
  *** inventory - leave out for now? (array of ids) (.where(thisItem => thisItem.id === item.id))

- Room (info hard-coded into database as 'rooms' collection)
  * name
  * description
  * adjacentRooms (array)
  * item ids (array)
  * enemy ids (array)
  * id

- Enemy (info hard-coded into database as 'enemies' collection)
  * name
  * hp
  * attack
  * currentRoom
  * id

- Item (info hard-coded into database as 'items' collection)
  * name
  * description
  * effect
  * id

*** GameControl ***

- Game control will toggle which room will be shown (currentRoom)
- Player will always be shown, and with each action done, player state will be updated
  - i.e. when a player uses an item, player gets damage dealt to them

*** MVP ***

1. have a player start a new game in a room, be able to move to another room
2. Interactions in the room - description, possible directions to move (walls impassible)
3. Interactions with enemies and Items
  - open fight UI with enemy
  - use items & attacks etc
  - check hp after each change in player's state & enemy's state